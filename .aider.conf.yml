# Aider Configuration for pytest-analyzer project
# Optimized for Pixi environment management and GitHub integration

# GitHub Integration
github_repo: MementoRC/llm-pytest-analyzer

# Model Configuration
model: claude-3-5-sonnet-latest
editor-model: claude-3-5-haiku-latest

# Environment Integration
env:
  manager: pixi
  use: true
  name: dev

# Command Integration
# Use Pixi for command execution in dev environment
test-cmd: pixi run -e dev pytest
lint-cmd: pixi run -e dev ruff check --fix
format-cmd: pixi run -e dev ruff format

# Git Integration
git: true
gitignore: true
auto-commits: true
commit-prompt: true

# File Management
map-tokens: 2048
editor-edit-format: diff
show-model-warnings: true

# Project Structure Awareness
read:
  - src/pytest_analyzer/
  - tests/
  - pyproject.toml
  - README.md

# Files to ignore
ignore:
  # Build and cache directories
  - .pytest_cache/
  - .mypy_cache/
  - .ruff_cache/
  - __pycache__/
  - "*.pyc"
  - "*.pyo"
  - "*.pyd"
  - .coverage
  - coverage.xml
  - htmlcov/
  - .tox/
  - dist/
  - build/
  - "*.egg-info/"

  # Environment and dependency files
  - .pixi/
  - pixi.lock
  - .venv/
  - venv/
  - env/

  # IDE and editor files
  - .vscode/
  - .idea/
  - "*.swp"
  - "*.swo"
  - "*~"

  # OS files
  - .DS_Store
  - Thumbs.db

  # Git
  - .git/

  # Temporary files
  - "*.tmp"
  - "*.temp"
  - "*.log"

  # Generated documentation
  - site/
  - docs/_build/

  # Project specific
  - mocked/
  - examples/
  - tasks/
  - debug_cli.py
  - CLAUDE.local.md

# Quality Integration
pre-commit: true

# Conversation Settings
chat-history-file: .aider.chat.history.md
restore-chat-history: true

# Performance
max-chat-history-tokens: 8192

# Development Workflow
architect: false
auto-test: true

# Output Settings
verbose: false

# Repository Settings
repo-map: true
suggest-shell-commands: true

# Code Review
review: true
