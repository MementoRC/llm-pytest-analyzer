# Task ID: 4
# Title: Implement Test Discovery and Selection UI
# Status: done
# Dependencies: 3
# Priority: high
# Description: Create a tree view interface for discovering and selecting tests to run.
# Details:
Implement a test selection interface with:
- Tree view of discovered tests organized by modules/classes
- Checkbox selection for individual tests/suites
- Filter functionality by test names, files, or directories
- Support for pytest markers and custom filters
- Context menu for common actions

Use Qt's QTreeView with a custom model to represent the test hierarchy. Store selection state and restore it across sessions. Connect selection changes to the TestExecutionController.

# Test Strategy:
Test UI rendering of test hierarchy. Verify selection persistence across sessions. Test filter functionality with various criteria. Ensure proper handling of large test suites with lazy loading.
